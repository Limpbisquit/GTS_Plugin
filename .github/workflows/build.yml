name: Build Plugin
on:
  push:
    paths:
      - 'src/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
      - '.github/workflows/build.yml'
  workflow_dispatch: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: windows-2025
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup MSVC Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: 'x64'

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg
          key: windows-vcpkg-${{ steps.vcpkg-version.outputs.hash }}-v1
          restore-keys: |
            windows-vcpkg-${{ steps.vcpkg-version.outputs.hash }}-
            windows-vcpkg-

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: build/Release
          key: windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-${{ steps.submodule-hashes.outputs.hash }}-v1
          restore-keys: |
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-${{ steps.submodule-hashes.outputs.hash }}-
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgJsonGlob: vcpkg.json

      - name: Build
        uses: lukka/run-cmake@v10
        with:
            configurePreset: config-release
            buildPreset: build-release

      - name: Upload Distribution Package
        uses: actions/upload-artifact@v4
        with:
          name: distribution-package
          path: distribution/Package-*