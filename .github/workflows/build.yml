name: Build Plugin
on:
  push:
    paths:
      - 'src/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
      - '.github/workflows/build.yml'
  workflow_dispatch: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: windows-2025
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup MSVC Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: 'x64'

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg
          key: windows-vcpkg-${{ steps.vcpkg-version.outputs.hash }}-v1
          restore-keys: |
            windows-vcpkg-${{ steps.vcpkg-version.outputs.hash }}-
            windows-vcpkg-

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: build/Release
          key: windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-${{ steps.submodule-hashes.outputs.hash }}-v1
          restore-keys: |
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-${{ steps.submodule-hashes.outputs.hash }}-
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-${{ steps.vcpkg-version.outputs.hash }}-
            windows-build-${{ hashFiles('vcpkg.json', 'CMakePresets.json', 'CMakeLists.txt') }}-

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgJsonGlob: vcpkg.json

      - name: Build
        uses: lukka/run-cmake@v10
        with:
            configurePreset: config-release
            buildPreset: build-release

      - name: Upload Distribution Package
        uses: actions/upload-artifact@v4
        with:
          name: distribution-package
          path: distribution/Package-*

  release:
    needs: build
    runs-on: windows-2025
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for CMake project VERSION bump
        id: check_version
        shell: bash
        run: |
          echo "=== Checking version bump ==="
          git fetch --depth=2 origin ${{ github.ref }}
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.sha }}^)
          echo "Previous tag: $PREV_TAG"
          git diff $PREV_TAG ${{ github.sha }} -- CMakeLists.txt > diff.patch
          echo "Diff of CMakeLists.txt:"; cat diff.patch
          if grep -E '^\+.*VERSION' diff.patch; then
            echo "bumped=true" >> $GITHUB_OUTPUT
          else
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi
      - name: Abort if no version bump
        if: steps.check_version.outputs.bumped == 'false'
        run: |
          echo "No CMake project VERSION change detected; skipping release."
          exit 0
      - name: Download Distribution
        uses: actions/download-artifact@v4
        with:
          name: distribution-package
          path: distribution
      - name: Create Release ZIP
        shell: pwsh
        run: |
          Write-Host "=== Creating Release ZIP ==="
          $pkg = Get-ChildItem -Directory distribution\Package-* | Select-Object -First 1
          $zipName = "$($pkg.Name).zip"
          Compress-Archive -Path "$($pkg.FullName)\*" -DestinationPath $zipName
          Write-Host "Created release zip: $zipName"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          files: "*.zip"